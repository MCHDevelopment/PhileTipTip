CREATE TABLE adressen (
    adressId INT AUTO_INCREMENT PRIMARY KEY,
    strasse VARCHAR(100),
    hausNummer VARCHAR(10),
    postleitzahl VARCHAR(10),
    wohnort VARCHAR(100)
);

CREATE TABLE kontaktdaten (
    kontaktId INT AUTO_INCREMENT PRIMARY KEY,
    telefonNummer VARCHAR(20),
    emailAdresse VARCHAR(50),
    adressId INT,
    FOREIGN KEY (adressId) REFERENCES adressen(adressId)
);

CREATE TABLE nutzer (
    nutzerId INT AUTO_INCREMENT PRIMARY KEY,
    nutzerTyp ENUM('Mieter', 'Mitarbeiter', 'Eigentümer') NOT NULL,
    vorname VARCHAR(50),
    nachname VARCHAR(50),
    kontaktId INT,
    FOREIGN KEY (kontaktId) REFERENCES kontaktdaten(kontaktId)
);

CREATE TABLE mieter (
    mieterId INT AUTO_INCREMENT PRIMARY KEY,
    nutzerId INT UNIQUE,
    kontaktId INT,
    FOREIGN KEY (nutzerId) REFERENCES nutzer(nutzerId),
    FOREIGN KEY (kontaktId) REFERENCES kontaktdaten(kontaktId)
);

CREATE TABLE eigentuemer (
    eigentuemerId INT AUTO_INCREMENT PRIMARY KEY,
    nutzerId INT UNIQUE,
    kontaktId INT,
    FOREIGN KEY (nutzerId) REFERENCES nutzer(nutzerId),
    FOREIGN KEY (kontaktId) REFERENCES kontaktdaten(kontaktId)
);

CREATE TABLE mitarbeiter (
    mitarbeiterId INT AUTO_INCREMENT PRIMARY KEY,
    nutzerId INT UNIQUE,
    kontaktId INT,
    FOREIGN KEY (nutzerId) REFERENCES nutzer(nutzerId),
    FOREIGN KEY (kontaktId) REFERENCES kontaktdaten(kontaktId)
);

CREATE TABLE wohnanlage (
    wohnanlageId INT AUTO_INCREMENT PRIMARY KEY,
    wohnanlagenName VARCHAR(100) NOT NULL,
    adressId INT,
    FOREIGN KEY (adressId) REFERENCES adressen(adressId)
);

CREATE TABLE gebaeude (
    gebaeudeId INT AUTO_INCREMENT PRIMARY KEY,
    wohnanlageId INT, -- Neue Spalte für die Verknüpfung zur Wohnanlage
    gebaeudeName VARCHAR(100),
    adressId INT,
    FOREIGN KEY (wohnanlageId) REFERENCES wohnanlage(wohnanlageId) ON DELETE SET NULL, -- Gebäude bleibt bestehen, wenn Wohnanlage gelöscht wird
    FOREIGN KEY (adressId) REFERENCES adressen(adressId)
);

CREATE TABLE wohnung (
    wohnungId INT AUTO_INCREMENT PRIMARY KEY,
    gebaeudeId INT NOT NULL,
    wohnungsnummer VARCHAR(10) NOT NULL, -- z. B. Wohnung Nr., Stockwerk o. Ä.
    wohnflaeche DECIMAL(10, 2), -- Quadratmeterangabe für die Fläche der Wohnung
    zimmeranzahl INT,
    FOREIGN KEY (gebaeudeId) REFERENCES gebaeude(gebaeudeId)
);

CREATE TABLE teams (
    teamId INT AUTO_INCREMENT PRIMARY KEY,
    teamName VARCHAR(100) NOT NULL
);

CREATE TABLE teamleiter (
    teamleiterId INT AUTO_INCREMENT PRIMARY KEY,
    mitarbeiterId INT,
    teamId INT,
    FOREIGN KEY (mitarbeiterId) REFERENCES mitarbeiter(mitarbeiterId),
    FOREIGN KEY (teamId) REFERENCES teams(teamId)
);

CREATE TABLE meldungen (
    meldungsId INT AUTO_INCREMENT PRIMARY KEY,
    localUriString VARCHAR(255),
    remoteUrlString VARCHAR(255),
    nutzerId INT NOT NULL,
    adressId INT,
    meldungsart VARCHAR(100) NOT NULL,
    meldungstext TEXT,
    latitude DECIMAL(9, 6),
    longitude DECIMAL(9, 6),
    FOREIGN KEY (nutzerId) REFERENCES nutzer(nutzerId),
    FOREIGN KEY (adressId) REFERENCES adressen(adressId)
);

CREATE TABLE projekte (
    projektId INT AUTO_INCREMENT PRIMARY KEY,
    meldungsId INT,
    teamId INT,
    anweisungen TEXT,
    startdatum DATE,
    enddatum DATE,
    projektStatus ENUM('erfasst', 'inArbeit', 'abgeschlossen') DEFAULT 'erfasst',
    FOREIGN KEY (meldungsId) REFERENCES meldungen(meldungsId),
    FOREIGN KEY (teamId) REFERENCES teams(teamId)
);

CREATE TABLE wohnung_mieter (
    wohnungId INT,
    mieterId INT,
    PRIMARY KEY (wohnungId, mieterId),
    FOREIGN KEY (wohnungId) REFERENCES wohnungen(wohnungId),
    FOREIGN KEY (mieterId) REFERENCES mieter(mieterId)
);

CREATE TABLE wohnung_eigentuemer (
    wohnungId INT,
    eigentuemerId INT,
    PRIMARY KEY (wohnungId, eigentuemerId),
    FOREIGN KEY (wohnungId) REFERENCES wohnung(wohnungId) ON DELETE CASCADE,
    FOREIGN KEY (eigentuemerId) REFERENCES eigentuemer(eigentuemerId) ON DELETE CASCADE
);

CREATE TABLE gebaeude_eigentuemer (
    gebaeudeId INT,
    eigentuemerId INT,
    PRIMARY KEY (gebaeudeId, eigentuemerId),
    FOREIGN KEY (gebaeudeId) REFERENCES gebaeude(gebaeudeId) ON DELETE CASCADE,
    FOREIGN KEY (eigentuemerId) REFERENCES eigentuemer(eigentuemerId) ON DELETE CASCADE
);

CREATE TABLE wohnanlage_eigentuemer (
    wohnanlageId INT,
    eigentuemerId INT,
    PRIMARY KEY (wohnanlageId, eigentuemerId),
    FOREIGN KEY (wohnanlageId) REFERENCES wohnanlage(wohnanlageId) ON DELETE CASCADE,
    FOREIGN KEY (eigentuemerId) REFERENCES eigentuemer(eigentuemerId) ON DELETE CASCADE
);

CREATE TABLE team_mitglieder (
    team_mitgliedId INT AUTO_INCREMENT PRIMARY KEY,
    mitarbeiterId INT,
    teamId INT,
    FOREIGN KEY (mitarbeiterId) REFERENCES mitarbeiter(mitarbeiterId),
    FOREIGN KEY (teamId) REFERENCES teams(teamId)
);